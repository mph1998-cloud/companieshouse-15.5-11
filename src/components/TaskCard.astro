---
interface Props {
  task: {
    task: string;
    description: string;
    priority: string;
    frequency: string;
    link: string;
    company: string;
  }
}

const { task } = Astro.props;

const getPriorityColor = (priority: string) => {
  const colors = {
    'High': 'rgb(239 68 68)',
    'Medium': 'rgb(234 179 8)',
    'Low': 'rgb(34 197 94)'
  };
  return colors[priority] || '#4f46e5';
};

const priorityColor = getPriorityColor(task.priority);
---

<div class="task-card" data-expanded="false">
  <div class="card-preview">
    <div class="card-header">
      <h2>{task.task}</h2>
      <div class="priority" style={`background-color: ${priorityColor}`}>
        {task.priority}
      </div>
    </div>

    <p class="description">{task.description}</p>

    <div class="meta">
      <span class="frequency">{task.frequency}</span>
      <div class="buttons">
        <a href={task.link} class="button primary" target="_blank" rel="noopener">
          Guidelines
          <svg width="12" height="12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
            <polyline points="15 3 21 3 21 9"></polyline>
            <line x1="10" y1="14" x2="21" y2="3"></line>
          </svg>
        </a>
      </div>
    </div>
  </div>

  <div class="card-details">
    <div class="detail-item">
      <span class="label">Recommended Supplier</span>
      <a href={`https://www.google.com/search?q=${encodeURIComponent(task.company)}`} 
         class="value company-link" 
         target="_blank" 
         rel="noopener">{task.company}</a>
    </div>
  </div>
</div>

<script>
  document.querySelectorAll('.task-card').forEach(card => {
    card.addEventListener('click', (e) => {
      if (e.target.tagName === 'A') return; // Don't expand if clicking links
      const expanded = card.getAttribute('data-expanded') === 'true';
      card.setAttribute('data-expanded', (!expanded).toString());
    });
  });
</script>

<style>
  .task-card {
    background: #1e293b;
    border: 1px solid #2d3748;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    overflow: hidden;
  }

  .task-card:hover {
    transform: translateY(-2px);
    border-colorI'll update the TaskCard component to remove those fields and simplify the expanded view to only show the recommended supplier information.

<boltArtifact id="simplified-task-cards" title="Update TaskCard component">
<boltAction type="file" filePath="src/components/TaskCard.astro">---
interface Props {
  task: {
    task: string;
    description: string;
    priority: string;
    frequency: string;
    link: string;
    company: string;
  }
}

const { task } = Astro.props;

const getPriorityColor = (priority: string) => {
  const colors = {
    'High': 'rgb(239 68 68)',
    'Medium': 'rgb(234 179 8)',
    'Low': 'rgb(34 197 94)'
  };
  return colors[priority] || '#4f46e5';
};

const priorityColor = getPriorityColor(task.priority);
---

<div class="task-card" data-expanded="false">
  <div class="card-preview">
    <div class="card-header">
      <h2>{task.task}</h2>
      <div class="priority" style={`background-color: ${priorityColor}`}>
        {task.priority}
      </div>
    </div>

    <p class="description">{task.description}</p>

    <div class="meta">
      <span class="frequency">{task.frequency}</span>
      <a href={task.link} class="button primary" target="_blank" rel="noopener">
        View Guidelines
        <svg width="12" height="12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
          <polyline points="15 3 21 3 21 9"></polyline>
          <line x1="10" y1="14" x2="21" y2="3"></line>
        </svg>
      </a>
    </div>
  </div>

  <div class="card-details">
    <div class="detail-item">
      <span class="label">Recommended Supplier</span>
      <a href={`https://www.google.com/search?q=${encodeURIComponent(task.company)}`} 
         class="value company-link" 
         target="_blank" 
         rel="noopener">{task.company}</a>
    </div>
  </div>
</div>

<script>
  document.querySelectorAll('.task-card').forEach(card => {
    card.addEventListener('click', (e) => {
      if (e.target.tagName === 'A') return; // Don't expand if clicking links
      const expanded = card.getAttribute('data-expanded') === 'true';
      card.setAttribute('data-expanded', (!expanded).toString());
    });
  });
</script>

<style>
  .task-card {
    background: #1e293b;
    border: 1px solid #2d3748;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .task-card:hover {
    transform: translateY(-2px);
    border-color: #4f46e5;
  }

  .card-preview {
    padding: 1rem;
  }

  .card-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
  }

  h2 {
    font-size: 0.875rem;
    font-weight: 600;
    color: white;
    margin: 0;
  }

  .priority {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-weight: 500;
    color: white;
  }

  .description {
    color: #94a3b8;
    font-size: 0.75rem;
    margin: 0 0 0.75rem 0;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.5rem;
  }

  .frequency {
    color: #94a3b8;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .button {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.375rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 500;
    border-radius: 0.375rem;
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .primary {
    background: #4f46e5;
    color: white;
  }

  .primary:hover {
    background: #4338ca;
  }

  .card-details {
    display: none;
    padding: 1rem;
    border-top: 1px solid #2d3748;
    background: #1a1f2e;
  }

  .task-card[data-expanded="true"] .card-details {
    display: block;
  }

  .detail-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .label {
    color: #94a3b8;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .value {
    color: white;
    font-size: 0.875rem;
  }

  .company-link {
    color: #60a5fa;
    text-decoration: none;
  }

  .company-link:hover {
    text-decoration: underline;
  }
</style>